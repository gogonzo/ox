% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OX2.R
\name{vectorized-ox}
\alias{vectorized-ox}
\alias{OX}
\alias{XO}
\title{Vectorized \code{ox}}
\usage{
OX(.f, ..., .then = list(...)[[1]], .else = rev(list(...))[[1]])

XO(.f, ..., .then = list(...)[[1]], .else = rev(list(...))[[1]])
}
\arguments{
\item{.f}{(\code{function}) evaluated as \code{.f(...)}. Must return a vector of
indices, which defines elements which values will be replaced by \code{.else}.}

\item{...}{arguments passed to the \code{.f}.}

\item{.then}{positive-replacement. NOTE, that if \code{.then} is not specified
directly by named argument then the first argument from \code{...} will
be taken.}

\item{.else}{negative-replacement. NOTE, that if \code{.else} is not specified
directly by named argument then the last argument from \code{...} will
be considered as a replacement.}
}
\description{
Switch the values of the vector by another on specific indices.
}
\details{
\if{html}{\figure{uml2.jpg}{options: width="75\%" alt="Figure: uml2.jpg"}}
\if{latex}{\figure{uml2.jpg}{options: width=7cm}}

#' \code{OX} evaluates function \code{.f} which returns a vector of indices which
are then decide which values of \code{.then} are replaced by \verb{else}.\preformatted{.then[idx] <- .else[idx]
}

Consequence of above is that \code{idx = .f(...)} should be a logical vector of
the same length as \code{.then}, or integer vector of length \verb{< length(.then)}.
Length of \code{.then} should be also the same as length of \code{.else}

To invert the switch one can use \code{XO} which is equivalent of
\code{OX(Negate(.f), ..., .then, .else)}.
}
\examples{
# switch values of vector by
OX(is.na, c(1, NA, 3), .else = c(2, 2, 2))
XO(is.na, c(1, NA, 3), .else = c(2, 2, 2))
}
